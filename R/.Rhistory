timeTransform <- function(dataFrame){
dataFrame$time <- as.POSIXct(dataFrame$time, origin="1970-01-01")
return dataFrame
}
timeTransform <- function(dataFrame) {
dataFrame$time <- as.POSIXct(dataFrame$time, origin="1970-01-01")
return dataFrame
}
dataFrame$time <- as.POSIXct(dataFrame$time, origin="1970-01-01")
timeTransform <- function(dataFrame) {
dataFrame$time <- as.POSIXct(dataFrame$time, origin="1970-01-01")
return dataFrame
}
aggregation <- function(dataFrame, breakUnit) {
dataFrameRe <- aggregate(dataFrame$magnitude ~ cut(dataFrame$time, breaks = breakUnit), dataFrame, sum)
return dataFrameRe
}
timeTransform <- function(dataFrame) {
dataFrame$time <- as.POSIXct(dataFrame$time, origin="1970-01-01")
return dataFrame
}
aggregation <- function(dataFrame, breakUnit) {
dataFrameRe <- aggregate(dataFrame$magnitude ~ cut(dataFrame$time, breaks = breakUnit), dataFrame, sum)
return dataFrameRe
}
timeTransform <- function(dataFrame) {
dataFrame$time <- as.POSIXct(dataFrame$time, origin="1970-01-01")
return dataFrame
}
aggregation <- function(dataFrame, breakUnit) {
dataFrameRe <- aggregate(dataFrame$magnitude ~ cut(dataFrame$time, breaks = breakUnit), dataFrame, sum)
return dataFrameRe
}
aggregation <- function(dataFrame, breakUnit) {
aggregation <- function(dataFrame, breakUnit) {
aggregation <- function(dataFrame, breakUnit) {
return dataFrameRe
aggregation <- function(dataFrame, breakUnit) {
dataFrameRe <- aggregate(dataFrame$magnitude ~ cut(dataFrame$time, breaks = breakUnit), dataFrame, sum)
dataFrameRe
}
timeTransform <- function(dataFrame) {
dataFrame$time <- as.POSIXct(dataFrame$time, origin="1970-01-01")
dataFrame
}
# 분단위 합산
add_up <- function(dt_frame) {
dt_frame$time <- as.POSIXct(dt_frame$time,  origin="1970-01-01")
dt_frame <- aggregate(
x = dt_frame$magnitude,
by = list(dt_frame$time),
FUN = sum
)
dt_frame <- dt_frame[,-3] # Group.1 magnitude time, 마지막   time drop
names(dt_frame) <- c("time", "magnitude")
dt_frame
}
timeTransform <- function(dataFrame) {
dataFrame$time <- as.POSIXct(dataFrame$time,  origin="1970-01-01")
dataFrame
}
aggregation <- function(dataFrame, breakUnit) {
dataFrameRe <- aggregate(dataFrame$magnitude ~ cut( dataFrame$time, breaks = breakUnit), dataFrame, sum)
dataFrameRe
}
# Data load
#
options(digits=14)
x_j_cl <- read.csv(file='../data/criteo/extracted-data/criteo_cl_times.csv')
org_df <- data.frame(time=x_j_cl$time[1:7000], magnitude=x_j_cl$magnitude[1:7000])
# hawkes.cond.int
gradient_hawkes_df <- data.frame(time=x_cl, magnitude=CIF_cl)
gradient_hawkes_df_later <- gradient_hawkes_df
# gradient.hawkes.cond.int
gradient_hawkes_df <- data.frame(time=x_cl, magnitude=CIF_cl)
gradient_hawkes_df_later <- gradient_hawkes_df
# Time transform
org_df <- timeTransform(org_df)
org_df$time
org_df <- data.frame(time=x_j_cl$time[1:7000], magnitude=x_j_cl$magnitude[1:7000])
org_df$time
x_cl <- seq(x_j_cl$time[1], x_j_cl$time[7000], len=7000)
pdraw <- c(mu = 0.062850512533, theta = 0.013627776356, a = 0.011434188950, der=2.44)
f2_cl <- ptproc(pts = x_j_cl$time, cond.int = hawkes.cond.int, params = pdraw) # gradient.
CIF_cl_gradient <- evalCIF(f2_cl, xpts = x_cl)  # cl의 치역
# Data load
#
options(digits=14)
x_j_cl <- read.csv(file='../data/criteo/extracted-data/criteo_cl_times.csv')
org_df <- data.frame(time=x_j_cl$time[1:7000], magnitude=x_j_cl$magnitude[1:7000])
# hawkes.cond.int
hawkes_df <- data.frame(time=x_cl, magnitude=CIF_cl)
# gradient.hawkes.cond.int
gradient_df <- data.frame(time=x_cl, magnitude=CIF_cl_gradient)
# Time transform
org_df <- timeTransform(org_df)
hawkes_df <- timeTransform(hawkes_df)
gradient_df <- timeTransform(gradient_df)
head(org_df)
head(hawkes_df)
head(gradient_df)
org_df <- aggregation(org_df,"1 min")
gradient_df<- aggregation(gradient_df,"1 min")
hawkes_df <- aggregation(hawkes_df,"1 min")
head(org_df)
head(hawkes_df)
head(gradient_df)
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, type='l')
plot(hawkes_df$`dataFrame$magnitude`, hawkes_df$`cut(dataFrame$time, breaks = breakUnit)`, type='l')
plot(gradient_df$`dataFrame$magnitude`, gradient_df$`cut(dataFrame$time, breaks = breakUnit)`, type='l')
plot(hawkes_df$`dataFrame$magnitude`, hawkes_df$`cut(dataFrame$time, breaks = breakUnit)`, type='l')
plot(gradient_df$`dataFrame$magnitude`, gradient_df$`cut(dataFrame$time, breaks = breakUnit)`, type='l')
pdraw <- c(mu = 0.062850512533, theta = 0.013627776356, a = 0.011434188950, der=2.44)
f2_cl <- ptproc(pts = x_j_cl$time, cond.int = hawkes.cond.int, params = pdraw) # gradient.
CIF_cl <- evalCIF(f2_cl, xpts = x_cl)  # cl의 치역
x_cl <- seq(x_j_cl$time[1], x_j_cl$time[7000], len=7000)
pdraw <- c(mu = 0.062850512533, theta = 0.013627776356, a = 0.011434188950, der=2.44)
f2_cl <- ptproc(pts = x_j_cl$time, cond.int = hawkes.cond.int, params = pdraw) # gradient.
CIF_cl_gradient <- evalCIF(f2_cl, xpts = x_cl)  # cl의 치역
x_cl <- seq(x_j_cl$time[1], x_j_cl$time[7000], len=7000)
pdraw <- c(mu = 0.062850512533, theta = 0.013627776356, a = 0.011434188950, der=2.44)
f2_cl <- ptproc(pts = x_j_cl$time, cond.int = gradient.hawkes.cond.int, params = pdraw) # gradient.
CIF_cl_gradient <- evalCIF(f2_cl, xpts = x_cl)  # cl의 치역
# gradient.hawkes.cond.int
gradient_df <- data.frame(time=x_cl, magnitude=CIF_cl_gradient)
gradient_df <- timeTransform(gradient_df)
gradient_df<- aggregation(gradient_df,"1 min")
plot(gradient_df$`dataFrame$magnitude`, gradient_df$`cut(dataFrame$time, breaks = breakUnit)`, type='l')
head(org_df)
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, type='l')
# multi-plot
org_y <- org_df$`dataFrame$magnitude`
org_x <- org_df$`cut(dataFrame$time, breaks = breakUnit)`
hawkes_y <- hawkes_df$`dataFrame$magnitude`
hawkes_x <- hawkes_df$`cut(dataFrame$time, breaks = breakUnit)`
gradient_y <- gradient_df$`dataFrame$magnitude`
gradient_x <- gradient_df$`cut(dataFrame$time, breaks = breakUnit)`
plot(org_y,org_x,ylab="lambda",xlab="time-line",ylim=c(0,0.57),pch=4,type="o",col="#228B22")
par(new=T)
plot(hawkes_y,hawkes_x,ylab="",xlab="",ylim=c(0,0.57),pch=0,type="o",col="#FF3030")
par(new=T)
plot(gradient_y,gradient_x,ylab="",xlab="",ylim=c(0,0.57),pch=2,type="o",col="#009ACD")
legend(x=16,y=0.57, c("A","B","C"), cex=0.7, pch=c(2,0,4),col=c("#009ACD","#FF3030","#228B22"))
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, type='l')
par(new=T)
plot(hawkes_df$`dataFrame$magnitude`, hawkes_df$`cut(dataFrame$time, breaks = breakUnit)`, type='l')
par(new=T)
plot(gradient_df$`dataFrame$magnitude`, gradient_df$`cut(dataFrame$time, breaks = breakUnit)`, type='l')
par(new=T)
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, type='l', col="#228B22")
par(new=T)
plot(hawkes_df$`dataFrame$magnitude`, hawkes_df$`cut(dataFrame$time, breaks = breakUnit)`, type='l', col="#FF3030")
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, type='l', col="#228B22")
par(new=T)
plot(gradient_df$`dataFrame$magnitude`, gradient_df$`cut(dataFrame$time, breaks = breakUnit)`, type='l', col="#009ACD")
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 100), ylim=c(0, 5000), type='l', col="#228B22")
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 100), ylim=c(0, 80), type='l', col="#228B22")
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 5000), ylim=c(0, 80), type='l', col="#228B22")
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 1000), ylim=c(0, 80), type='l', col="#228B22")
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 100), ylim=c(0, 80), type='l', col="#228B22")
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 100), ylim=c(0, 1000), type='l', col="#228B22")
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 100), ylim=c(0, 300), type='l', col="#228B22")
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 100), ylim=c(0, 300), type='l', col="#228B22")
par(new=T)
plot(hawkes_df$`dataFrame$magnitude`, hawkes_df$`cut(dataFrame$time, breaks = breakUnit)`, type='l', col="#FF3030")
par(new=T)
plot(gradient_df$`dataFrame$magnitude`, gradient_df$`cut(dataFrame$time, breaks = breakUnit)`, type='l', col="#009ACD")
org_df <- aggregation(org_df,"1 min")
org_df <- aggregation(org_df,"1 min")
head(org_df)
head(hawkes_df)
head(gradient_df)
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 100), ylim=c(0, 300), type='l', col="#228B22")
plot(gradient_df$`dataFrame$magnitude`, gradient_df$`cut(dataFrame$time, breaks = breakUnit)`, type='l', col="#009ACD")
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 100), ylim=c(0, 300), type='l', col="#228B22")
par(new=T)
plot(hawkes_df$`dataFrame$magnitude`, hawkes_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 100), ylim=c(0, 300), type='l', col="#FF3030")
par(new=T)
plot(gradient_df$`dataFrame$magnitude`, gradient_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 100), ylim=c(0, 300), type='l', col="#009ACD")
par(new=T)
plot(org_y,org_x,ylab="lambda",xlab="time-line",ylim=c(0,0.57),pch=4,type="o",col="#228B22")
plot(org_y,org_x,ylab="lambda",xlab="time-line",ylim=c(0,0.57),pch=4,type="o",col="#228B22")
# multi-plot
org_y <- org_df$`dataFrame$magnitude`
org_x <- org_df$`cut(dataFrame$time, breaks = breakUnit)`
hawkes_y <- hawkes_df$`dataFrame$magnitude`
hawkes_x <- hawkes_df$`cut(dataFrame$time, breaks = breakUnit)`
gradient_y <- gradient_df$`dataFrame$magnitude`
gradient_x <- gradient_df$`cut(dataFrame$time, breaks = breakUnit)`
plot(org_y,org_x,ylab="lambda",xlab="time-line",ylim=c(0,0.57),pch=4,type="o",col="#228B22")
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 100), ylim=c(0, 300), type='l', col="#228B22")
par(new=T)
plot(hawkes_df$`dataFrame$magnitude`, hawkes_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 100), ylim=c(0, 300), type='l', col="#009ACD")
par(new=T)
plot(gradient_df$`dataFrame$magnitude`, gradient_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 100), ylim=c(0, 300), type='l', col="#FF3030")
# trade_times boundary
trade_times_cl <- x_j_cl$time[0:5000]
pstart <- c(mu = 0.3333116491710, C = 0.0347599066966, a = 0.0075470019429, der = 2.44) # gradient.hawkes.cond.int
ppm_cl <- ptproc(pts = trade_times_cl, cond.int = gradient.hawkes.cond.int, params = pstart)
condition(ppm_cl) <- penalty(code = NULL, condition = quote(any(params < 0)))
# fitting_criteo_cv_times.csv
# fitting_criteo_cl_times.csv
f_cl <- ptproc.fit(ppm_cl, optim.control = list(trace = 2),method = "Nelder-Mead" ,alpha = 1e+5, hessian = TRUE)
# after fitting
summary(f_cl)
pdraw <- c(mu = 0.0215384654081, theta = 0.0136188517225, a = 0.0039132851308, der=2.9197932617100)
f2_cl <- ptproc(pts = x_j_cl$time, cond.int = gradient.hawkes.cond.int, params = pdraw) # gradient.
CIF_cl_gradient <- evalCIF(f2_cl, xpts = x_cl)  # cl의 치역
plot(CIF_cl_gradient)
plot(CIF_cl_gradient, type='l')
# gradient.hawkes.cond.int
gradient_df <- data.frame(time=x_cl, magnitude=CIF_cl_gradient)
gradient_df <- timeTransform(gradient_df)
gradient_df<- aggregation(gradient_df,"1 min")
head(gradient_df)
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 100), ylim=c(0, 300), type='l', col="#228B22")
par(new=T)
plot(hawkes_df$`dataFrame$magnitude`, hawkes_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 100), ylim=c(0, 300), type='l', col="#009ACD")
par(new=T)
plot(gradient_df$`dataFrame$magnitude`, gradient_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 100), ylim=c(0, 300), type='l', col="#FF3030")
x_cl <- seq(x_j_cl$time[1], x_j_cl$time[7000], len=14000)
pdraw <- c(mu = 0.062850512533, theta = 0.013627776356, a = 0.011434188950, der=2.44)
f2_cl <- ptproc(pts = x_j_cl$time, cond.int = gradient.hawkes.cond.int, params = pdraw) # gradient.
# trade_times boundary
trade_times_cl <- x_j_cl$time[0:5000]
# x_j <- read.csv(file='/Users/sangwonhwang/R_Projects/ptproc-master/data/192000_292000_times.csv')
x_j_cl <- read.csv(file='../data/criteo/extracted-data/criteo_cl_times.csv')
# trade_times boundary
trade_times_cl <- x_j_cl$time[0:5000]
pstart <- c(mu = 0.3333116491710, C = 0.0347599066966, a = 0.0075470019429, der = 2.44) # gradient.hawkes.cond.int
ppm_cl <- ptproc(pts = trade_times_cl, cond.int = gradient.hawkes.cond.int, params = pstart)
condition(ppm_cl) <- penalty(code = NULL, condition = quote(any(params < 0)))
x_j_cl$time[0]
seq(x_j_cl$time[1], x_j_cl$time[5000], len=14000)
eval_pts <- seq(x_j_cl$time[1], x_j_cl$time[5000], len=14000)
pstart <- c(mu = 0.3333116491710, C = 0.0347599066966, a = 0.0075470019429, der = 2.44) # gradient.hawkes.cond.int
ppm_cl <- ptproc(pts = eval_pts, cond.int = gradient.hawkes.cond.int, params = pstart)
condition(ppm_cl) <- penalty(code = NULL, condition = quote(any(params < 0)))
# fitting_criteo_cv_times.csv
# fitting_criteo_cl_times.csv
f_cl <- ptproc.fit(ppm_cl, optim.control = list(trace = 2),method = "Nelder-Mead" ,alpha = 1e+5, hessian = TRUE)
# after fitting
summary(f_cl)
x_cl <- seq(x_j_cl$time[1], x_j_cl$time[7000], len=14000)
pdraw <- c(mu = 4.0893963922e-01, theta = 1.4858474603e-01, a = 2.5608637693e-09, der=2.6038450457e+00)
f2_cl <- ptproc(pts = x_j_cl$time, cond.int = gradient.hawkes.cond.int, params = pdraw) # gradient.
CIF_cl_gradient <- evalCIF(f2_cl, xpts = x_cl)  # cl의 치역
plot(CIF_cl_gradient, type='l')
# gradient.hawkes.cond.int
gradient_df <- data.frame(time=x_cl, magnitude=CIF_cl_gradient)
gradient_df <- timeTransform(gradient_df)
gradient_df<- aggregation(gradient_df,"1 min")
head(gradient_df)
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 100), ylim=c(0, 300), type='l', col="#228B22")
par(new=T)
plot(hawkes_df$`dataFrame$magnitude`, hawkes_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 100), ylim=c(0, 300), type='l', col="#009ACD")
par(new=T)
plot(gradient_df$`dataFrame$magnitude`, gradient_df$`cut(dataFrame$time, breaks = breakUnit)`, xlim=c(0, 100), ylim=c(0, 300), type='l', col="#FF3030")
head(CIF_cl_gradient)
# gradient.hawkes.cond.int
gradient_df <- data.frame(time=x_cl, magnitude=CIF_cl_gradient)
gradient_df <- timeTransform(gradient_df)
# head(org_df)
# head(hawkes_df)
head(gradient_df)
gradient_df<- aggregation(gradient_df,"1 min")
head(gradient_df)
head(org_df)
plot(gradient_df$`dataFrame$magnitude`, gradient_df$`cut(dataFrame$time, breaks = breakUnit)`, type='l', col="#FF3030")
head(gradient_df)
max(gradient_df)
max(gradient_df$`dataFrame$magnitude`)
# gradient.hawkes.cond.int
gradient_df <- data.frame(time=x_cl, magnitude=CIF_cl_gradient)
gradient_df <- timeTransform(gradient_df)
# aggregation
org_df <- aggregation(org_df,"02.383258 sec")
x_j_cl <- read.csv(file='../data/criteo/extracted-data/criteo_cl_times.csv')
org_df <- data.frame(time=x_j_cl$time[1:7000], magnitude=x_j_cl$magnitude[1:7000])
# Time transform
org_df <- timeTransform(org_df)
# aggregation
org_df <- aggregation(org_df,"02.383258 sec")
plot(gradient_df$magnitude,gradient_df$time,, xlim=c(0, 100), ylim=c(0, 300), type = 'l')
plot(gradient_df$magnitude,gradient_df$time,, xlim=c(0, 100), ylim=c(0, 300), type = 'l')
plot(gradient_df$magnitude,gradient_df$time, xlim=c(0, 100), ylim=c(0, 300), type = 'l')
plot(gradient_df$magnitude,gradient_df$time)
par(new=T)
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, type = 'l')
plot(gradient_df$magnitude,gradient_df$time, , type = 'l')
par(new=T)
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, type = 'l')
plot(gradient_df$magnitude,gradient_df$time, , type = 'l')
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, type = 'l')
# Time transform
org_df <- timeTransform(org_df)
# Time transform
org_df <- timeTransform(org_df)
# Time transform
org_df <- timeTransform(org_df)
org_df <- data.frame(time=x_j_cl$time[1:7000], magnitude=x_j_cl$magnitude[1:7000])
head(org_df$time)
# Time transform
org_df <- timeTransform(org_df)
# aggregation
org_df <- aggregation(org_df,"02.383258 sec")
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, type = 'l')
# Time transform
org_df <- timeTransform(org_df)
org_df$time <- as.POSIXct(org_df$time,  origin="1970-01-01")
# hawkes.cond.int
hawkes_df <- data.frame(time=x_cl, magnitude=CIF_cl)
# hawkes.cond.int
hawkes_df <- data.frame(time=x_cl, magnitude=CIF_cl)
hawkes_df$time
org_df$time
gradient_df <- timeTransform(gradient_df)
# head(org_df)
# head(hawkes_df)
head(gradient_df)
gradient_df<- aggregation(gradient_df,"1 min")
plot(gradient_df$magnitude,gradient_df$time, , type = 'l')
head(gradient_df)
gradient_df
# Data load
#
options(digits=14)
x_j_cl <- read.csv(file='../data/criteo/extracted-data/criteo_cl_times.csv')
org_df <- data.frame(time=x_j_cl$time[1:7000], magnitude=x_j_cl$magnitude[1:7000])
# hawkes.cond.int
hawkes_df <- data.frame(time=x_cl, magnitude=CIF_cl)
# gradient.hawkes.cond.int
gradient_df <- data.frame(time=x_cl, magnitude=CIF_cl_gradient)
# Time transform
org_df <- timeTransform(org_df)
hawkes_df <- timeTransform(hawkes_df)
gradient_df <- timeTransform(gradient_df)
head(org_df)
head(hawkes_df)
head(gradient_df)
plot(gradient_df$magnitude,gradient_df$time, , type = 'l')
par(new=T)
plot(hawkes_df$magnitude, hawkes_df$time, m type='l')
plot(hawkes_df$magnitude, hawkes_df$time, type='l')
plot(hawkes_df$magnitude, hawkes_df$time, type='l')
plot(hawkes_df$magnitude, hawkes_df$time, type='l')
plot(gradient_df$magnitude,gradient_df$time, , type = 'l')
gradient_df <- aggregation(gradient_df,"1 min")
plot(gradient_df$magnitude,gradient_df$time, , type = 'l')
gradient_df
gradient_df <- aggregation(gradient_df,"2 min")
# gradient.hawkes.cond.int
gradient_df <- data.frame(time=x_cl, magnitude=CIF_cl_gradient)
gradient_df <- timeTransform(gradient_df)
plot(gradient_df$magnitude,gradient_df$time, , type = 'l')
# hawkes.cond.int
hawkes_df <- data.frame(time=x_cl, magnitude=CIF_cl)
hawkes_df <- timeTransform(hawkes_df)
plot(hawkes_df$magnitude, hawkes_df$time, type='l')
source('~/R_Projects/8.Gradient_Hawkes/R/CI-functions.R', echo=TRUE)
# data setup
options(digits=14)
# x_j <- read.csv(file='/Users/sangwonhwang/R_Projects/ptproc-master/data/192000_292000_times.csv')
x_j_cl <- read.csv(file='../data/criteo/extracted-data/criteo_cl_times.csv')
# trade_times boundary
trade_times_cl <- x_j_cl$time[0:5000]
eval_pts <- seq(x_j_cl$time[1], x_j_cl$time[5000], len=5000)
eval_pts <- seq(x_j_cl$time[1], x_j_cl$time[5000], len=5000)
pstart <- c(mu = 1.0 , k = 4.0 , c = 0.001 , theta = 0.1) # gradient.hawkes.cond.int
ppm_cl <- ptproc(pts = eval_pts, cond.int = PL.hawkes.cond.int, params = pstart)
condition(ppm_cl) <- penalty(code = NULL, condition = quote(any(params < 0)))
# fitting_criteo_cv_times.csv
# fitting_criteo_cl_times.csv
f_cl <- ptproc.fit(ppm_cl, optim.control = list(trace = 2),method = "Nelder-Mead" ,alpha = 1e+5, hessian = TRUE)
# after fitting
summary(f_cl)
x_cl <- seq(x_j_cl$time[1], x_j_cl$time[7000], len=14000)
pdraw <- c(mu = 4.0893963922e-01, theta = 1.4858474603e-01, c = 3.2995819451e+01, theta=1.0293792576e-04)
f2_cl <- ptproc(pts = x_j_cl$time, cond.int = PL.hawkes.cond.int, params = pdraw) # hawkes
CIF_cl_PL <- evalCIF(f2_cl, xpts = x_cl)  # cl의 치역
plot(CIF_cl_PL, type='l')
PL_df <- data.frame(time=x_cl, magnitude=CIF_cl_PL)
PL_df <- timeTransform(PL_df)
head(PL_df)
PL_df <- aggregation(PL_df,"1 min")
plot(PL_df$magnitude,PL_df$time, , type = 'l')
plot(PL_df$magnitude,PL_df$time, type = 'l')
PL_df <- aggregation(PL_df,"10 sec")
PL_df <- data.frame(time=x_cl, magnitude=CIF_cl_PL)
plot(PL_df$magnitude,PL_df$time, type = 'l')
PL_df <- timeTransform(PL_df)
PL_df <- aggregation(PL_df,"1 min")
plot(PL_df$`dataFrame$magnitude`,PL_df$`cut(dataFrame$time, breaks = breakUnit)`, type = 'l')
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, type = 'l')
org_df <- data.frame(time=x_j_cl$time[1:7000], magnitude=x_j_cl$magnitude[1:7000])
# Time transform
org_df <- timeTransform(org_df)
org_df <- aggregation(org_df,"1 min")
plot(org_df$`dataFrame$magnitude`, org_df$`cut(dataFrame$time, breaks = breakUnit)`, type = 'l')
par(new=T)
plot(PL_df$`dataFrame$magnitude`,PL_df$`cut(dataFrame$time, breaks = breakUnit)`, type = 'l',col="#228B22")
# after fitting
summary(f_cl)
eval_pts <- seq(x_j_cl$time[1], x_j_cl$time[5000], len=5000)
pstart <- c(mu = 1.3708465677e-03 , k = 1.3828517875e+02 , c = 3.2995819451e+01 , theta = 1.0293792576e-04) # gradient.hawkes.cond.int
ppm_cl <- ptproc(pts = eval_pts, cond.int = PL.hawkes.cond.int, params = pstart)
condition(ppm_cl) <- penalty(code = NULL, condition = quote(any(params < 0)))
# fitting_criteo_cv_times.csv
# fitting_criteo_cl_times.csv
f_cl <- ptproc.fit(ppm_cl, optim.control = list(trace = 2),method = "Nelder-Mead" ,alpha = 1e+5, hessian = TRUE)
# after fitting
summary(f_cl)
pstart <- c(mu = 4.8777128325e-03 , k = 1.5151516536e+03 , c = 9.1326302883e-06 , theta = 1.2557945941e-02) # gradient.hawkes.cond.int
ppm_cl <- ptproc(pts = eval_pts, cond.int = PL.hawkes.cond.int, params = pstart)
condition(ppm_cl) <- penalty(code = NULL, condition = quote(any(params < 0)))
# fitting_criteo_cv_times.csv
# fitting_criteo_cl_times.csv
f_cl <- ptproc.fit(ppm_cl, optim.control = list(trace = 2),method = "Nelder-Mead" ,alpha = 1e+5, hessian = TRUE)
# after fitting
summary(f_cl)
pdraw <- c(mu = 8.2224053197e-04, k = 1.4311764661e+03, theta = 6.4582396171e-05, a = 1.1304919910e-07)
f2_cl <- ptproc(pts = x_j_cl$time, cond.int = PL.hawkes.cond.int, params = pdraw) # hawkes
x_cl <- seq(x_j_cl$time[1], x_j_cl$time[7000], len=7000)
pdraw <- c(mu = 8.2224053197e-04, k = 1.4311764661e+03, theta = 6.4582396171e-05, a = 1.1304919910e-07)
f2_cl <- ptproc(pts = x_j_cl$time, cond.int = PL.hawkes.cond.int, params = pdraw) # hawkes
CIF_cl_PL <- evalCIF(f2_cl, xpts = x_cl)  # cl의 치역
pdraw <- c(mu = 1.3708465677e-03 , k = 1.3828517875e+02 , c = 3.2995819451e+01 , theta = 1.0293792576e-04)
f2_cl <- ptproc(pts = x_j_cl$time, cond.int = PL.hawkes.cond.int, params = pdraw) # hawkes
CIF_cl_PL <- evalCIF(f2_cl, xpts = x_cl)  # cl의 치역
plot(CIF_cl_PL, type='l')
pdraw <- c(mu = 4.8777128325e-03 , k = 1.5151516536e+03 , c = 9.1326302883e-06 , theta = 1.2557945941e-02)
f2_cl <- ptproc(pts = x_j_cl$time, cond.int = PL.hawkes.cond.int, params = pdraw) # hawkes
CIF_cl_PL <- evalCIF(f2_cl, xpts = x_cl)  # cl의 치역
CIF_cl_PL <- evalCIF(f2_cl, xpts = x_cl)  # cl의 치역
plot(CIF_cl_PL, type='l')
pdraw <- c(mu = 8.2224053197e-04, k = 1.4311764661e+03, theta = 6.4582396171e-05, a = 1.1304919910e-07)
pdraw <- c(mu = 8.2224053197e-04, k = 1.4311764661e+03, c = 6.4582396171e-05, theta = 1.1304919910e-07)
f2_cl <- ptproc(pts = x_j_cl$time, cond.int = PL.hawkes.cond.int, params = pdraw) # hawkes
CIF_cl_PL <- evalCIF(f2_cl, xpts = x_cl)  # cl의 치역
plot(CIF_cl_PL, type='l')
source('~/R_Projects/8.Gradient_Hawkes/R/CI-functions.R', echo=TRUE)
pstart <- c(mu = 0.3333116491710, C = 0.0347599066966, a = 0.0075470019429, , c = 3.2995819451e+01 , theta = 1.0293792576e-04) # gradient.hawkes.cond.int
# trade_times boundary
trade_times_cl <- x_j_cl$time[0:5000]
eval_pts <- seq(x_j_cl$time[1], x_j_cl$time[5000], len=5000)
ppm_cl <- ptproc(pts = eval_pts, cond.int = gradient.hawkes.cond.int, params = pstart)
condition(ppm_cl) <- penalty(code = NULL, condition = quote(any(params < 0)))
# fitting_criteo_cv_times.csv
# fitting_criteo_cl_times.csv
f_cl <- ptproc.fit(ppm_cl, optim.control = list(trace = 2),method = "Nelder-Mead" ,alpha = 1e+5, hessian = TRUE)
source('~/R_Projects/8.Gradient_Hawkes/R/CI-functions.R', echo=TRUE)
pstart <- c(mu = 0.3333116491710, C = 0.0347599066966, a = 0.0075470019429, , c = 3.2995819451e+01 , theta = 1.0293792576e-04) # gradient.hawkes.cond.int
ppm_cl <- ptproc(pts = eval_pts, cond.int = gradient.hawkes.cond.int, params = pstart)
condition(ppm_cl) <- penalty(code = NULL, condition = quote(any(params < 0)))
# fitting_criteo_cv_times.csv
# fitting_criteo_cl_times.csv
f_cl <- ptproc.fit(ppm_cl, optim.control = list(trace = 2),method = "Nelder-Mead" ,alpha = 1e+5, hessian = TRUE)
condition(ppm_cl) <- penalty(code = NULL, condition = quote(any(params < 0)))
source('~/R_Projects/8.Gradient_Hawkes/R/CI-functions.R', echo=TRUE)
source('~/R_Projects/6.ptproc_1.5-1_org/R/multi-ptproc.R', echo=TRUE)
source('~/R_Projects/8.Gradient_Hawkes/R/generics.R', echo=TRUE)
source('~/R_Projects/8.Gradient_Hawkes/R/methods.R', echo=TRUE)
source('~/R_Projects/8.Gradient_Hawkes/R/utility.R', echo=TRUE)
source('~/R_Projects/8.Gradient_Hawkes/R/zzz.R', echo=TRUE)
source('~/R_Projects/8.Gradient_Hawkes/R/add_up.R', echo=TRUE)
source('~/R_Projects/8.Gradient_Hawkes/R/CI-functions.R', echo=TRUE)
source('~/R_Projects/6.ptproc_1.5-1_org/R/multi-ptproc.R', echo=TRUE)
source('~/R_Projects/8.Gradient_Hawkes/R/generics.R', echo=TRUE)
source('~/R_Projects/8.Gradient_Hawkes/R/methods.R', echo=TRUE)
source('~/R_Projects/8.Gradient_Hawkes/R/utility.R', echo=TRUE)
source('~/R_Projects/8.Gradient_Hawkes/R/zzz.R', echo=TRUE)
# data setup
options(digits=14)
# x_j <- read.csv(file='/Users/sangwonhwang/R_Projects/ptproc-master/data/192000_292000_times.csv')
x_j_cl <- read.csv(file='../data/criteo/extracted-data/criteo_cl_times.csv')
x_j_cv <- read.csv(file='../data/criteo/extracted-data/criteo_cv_times.csv')
length(x_j_cl$time)
# head(x_j)
class(x_j_cl)
head(x_j_cv)
# trade_times boundary
trade_times_cl <- x_j_cl$time[0:5000]
trade_times_cv <- x_j_cv$time[0:5000]
eval_pts <- seq(x_j_cl$time[1], x_j_cl$time[5000], len=5000)
pstart <- c(mu = 0.3333116491710, C = 0.0347599066966, a = 0.0075470019429, , c = 3.2995819451e+01 , theta = 1.0293792576e-04) # gradient.hawkes.cond.int
pstart <- c(mu = 0.3333116491710, C = 0.0347599066966, a = 0.0075470019429, c = 3.2995819451e+01 , theta = 1.0293792576e-04) # gradient.hawkes.cond.int
ppm_cl <- ptproc(pts = eval_pts, cond.int = gradient.hawkes.cond.int, params = pstart)
condition(ppm_cl) <- penalty(code = NULL, condition = quote(any(params < 0)))
# fitting_criteo_cv_times.csv
# fitting_criteo_cl_times.csv
f_cl <- ptproc.fit(ppm_cl, optim.control = list(trace = 2),method = "Nelder-Mead" ,alpha = 1e+5, hessian = TRUE)
# data setup
options(digits=14)
# x_j <- read.csv(file='/Users/sangwonhwang/R_Projects/ptproc-master/data/192000_292000_times.csv')
x_j_cl <- read.csv(file='../data/criteo/extracted-data/criteo_cl_times.csv')
x_j_cv <- read.csv(file='../data/criteo/extracted-data/criteo_cv_times.csv')
length(x_j_cl$time)
# head(x_j)
class(x_j_cl)
head(x_j_cv)
# trade_times boundary
trade_times_cl <- x_j_cl$time[0:5000]
eval_pts <- seq(x_j_cl$time[1], x_j_cl$time[5000], len=5000)
pstart <- c(mu = 0.3333116491710, C = 0.0347599066966, a = 0.0075470019429, c = 1, theta = 1.02) # gradient.hawkes.cond.int
ppm_cl <- ptproc(pts = eval_pts, cond.int = gradient.hawkes.cond.int, params = pstart)
condition(ppm_cl) <- penalty(code = NULL, condition = quote(any(params < 0)))
# fitting_criteo_cv_times.csv
# fitting_criteo_cl_times.csv
f_cl <- ptproc.fit(ppm_cl, optim.control = list(trace = 2),method = "Nelder-Mead" ,alpha = 1e+5, hessian = TRUE)
# x_j <- read.csv(file='/Users/sangwonhwang/R_Projects/ptproc-master/data/192000_292000_times.csv')
x_j_cl <- read.csv(file='../data/criteo/extracted-data/criteo_cl_times.csv')
source('~/R_Projects/6.ptproc_1.5-1_org/R/multi-ptproc.R', echo=TRUE)
